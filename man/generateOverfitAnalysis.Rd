% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateOverfitAnalysis.R
\name{generateOverfitAnalysis}
\alias{generateOverfitAnalysis}
\alias{OverfitAnalysisResult}
\title{Generates Data for Overfitting Analysis}
\usage{
generateOverfitAnalysis(
  task,
  learner,
  tune.control = NULL,
  par.set,
  learner.tuned = NULL,
  only.on.improvement = FALSE,
  outer.resampling = cv10,
  ...
)
}
\arguments{
\item{task}{[\code{\link[mlr]{Task}}]}

\item{learner}{[\code{\link[mlr]{Learner}}]
Learner to be tuned and analyzed.}

\item{tune.control}{[\code{\link[mlr]{TuneControl}}]
If none is supplied a random search with 10 iterations will be performed.}

\item{par.set}{[\code{\link[ParamHelpers]{ParamSet}}]}

\item{learner.tuned}{[\code{\link[mlr]{Learner}}]
Learner wrapped with [\code{\link[mlr]{makeTuneWrapper}}]}

\item{only.on.improvement}{[\code{logical(1)}]
Calculating the performances can be epensive.
Do you just want to calculate them, when a new good performance is detected in the inner performance?
Default is \code{FALSE}.}

\item{outer.resampling}{[\code{\link[mlr]{ResampleDesc}} | \code{\link[mlr]{ResampleInstance}}]
Default is 10CV.}

\item{...}{[\code{...}]
Arguments passed to \code{resampleOverfit}}
}
\description{
Generates all necessary data to perform the overfitting analysis
}
